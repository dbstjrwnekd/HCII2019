View(data)
View(data2)
ggplot(data2, aes(x=variable[1500:2300], y=mean, group=groups)) +
theme_bw() +
scale_fill_manual(guide = FALSE) +
labs(title="Line plot for movement of each subjects", x="Frame", y="X mean coordinate") +
geom_line(aes(color=groups, linetype=groups)) +
geom_point(aes(color=groups))
data2$variable[1500:2300]
ggplot(data2, aes(x=variable[1500:2300], y=mean, group=groups)) +
theme_bw() +
scale_fill_manual(guide = FALSE) +
labs(title="Line plot for movement of each subjects", x="Frame", y="X mean coordinate") +
geom_line(aes(color=groups, linetype=groups)) +
geom_point(aes(color=groups))
ggplot(data2, aes(x=variable[1500:2300], y=mean[1500:2300], group=groups)) +
theme_bw() +
scale_fill_manual(guide = FALSE) +
labs(title="Line plot for movement of each subjects", x="Frame", y="X mean coordinate") +
geom_line(aes(color=groups, linetype=groups)) +
geom_point(aes(color=groups))
ggplot(data2, aes(x=variable[1500:2300], y=mean[1500:2300], group=groups[1500:2300])) +
theme_bw() +
scale_fill_manual(guide = FALSE) +
labs(title="Line plot for movement of each subjects", x="Frame", y="X mean coordinate") +
geom_line(aes(color=groups, linetype=groups)) +
geom_point(aes(color=groups))
d1500_2300 <- data2[data2$variable>=1500&&data2$variable<=2300,]
type(data2$variable)
data2$variable
fac = data2$variable
as.numeric(as.character(fac))
fac = as.numeric(as.character(fac))
d1500_2300 <- data2[fac>=1500&&fac<=2300,]
fac = c(1500:2300)
fac = as.character(fac)
d1500_2300 <- data2[fac,]
View(d1500_2300)
d1500_2300 <- data2[data2$variable in range(fac),]
d1500_2300 <- data2[data2$variable %in% fac,]
View(d1500_2300)
ggplot(d1500_2300, aes(x=variable, y=mean, group=groups)) +
theme_bw() +
scale_fill_manual(guide = FALSE) +
labs(title="Line plot for movement of each subjects", x="Frame", y="X mean coordinate") +
geom_line(aes(color=groups, linetype=groups)) +
geom_point(aes(color=groups))
ggplot(d1500_2300, aes(x=variable, y=mean, group=groups)) +
theme_bw() +
scale_fill_manual(guide = FALSE) +
labs(title="Line plot for movement of each subjects", x="Frame 1500 to 2300", y="X mean coordinate") +
geom_line(aes(color=groups, linetype=groups)) +
geom_point(aes(color=groups))
ggplot(d1500_2300, aes(x=variable, y=sd, group=groups)) +
theme_bw() +
scale_fill_manual(guide = FALSE) +
labs(title="Line plot for movement of each subjects", x="Frame", y="X sd coordinate") +
geom_line(aes(color=groups, linetype=groups)) +
geom_point(aes(color=groups))
ggplot(d1500_2300, aes(x=variable, y=sd, group=groups)) +
theme_bw() +
scale_fill_manual(guide = FALSE) +
labs(title="Line plot for movement of each subjects", x="Frame 1500 to 2300", y="X sd coordinate") +
geom_line(aes(color=groups, linetype=groups)) +
geom_point(aes(color=groups))
fac2 - c(2300:3000)
fac2 = c(2300:3000)
fac2 = as.character(fac2)
d2300_3000 <- data2[data2$variable %in% fac2,]
fac2 = c(2300:3600)
fac2 = as.character(fac2)
d2300_3600 <- data2[data2$variable %in% fac2,]
ggplot(d2300_3600, aes(x=variable, y=mean, group=groups)) +
theme_bw() +
scale_fill_manual(guide = FALSE) +
labs(title="Line plot for movement of each subjects", x="Frame 2300 to 3600", y="X mean coordinate") +
geom_line(aes(color=groups, linetype=groups)) +
geom_point(aes(color=groups))
ggplot(d2300_3600, aes(x=variable, y=sd, group=groups)) +
theme_bw() +
scale_fill_manual(guide = FALSE) +
labs(title="Line plot for movement of each subjects", x="Frame 2300 to 3600", y="X sd coordinate") +
geom_line(aes(color=groups, linetype=groups)) +
geom_point(aes(color=groups))
write.csv(r_x_sd_df,"C:/Users/user/Desktop/sd",row.names=TRUE)
library(reshape2)
library(dplyr)
library(ggplot2)
#phs <- read.csv("~/Downloads/pretest_?????????_201221114.csv", header = T, stringsAsFactors = F)
#pch <- read.csv("~/Downloads/pretest_?????????_201321099.csv", header = T, stringsAsFactors = F)
#yeo <- read.csv("~/Downloads/pretest_??????????????????.csv", header = T, stringsAsFactors = F)
#csm <- read.csv("~/Downloads/pretest_??????????????????.csv", header = T, stringsAsFactors = F)
#phs <- phs[1:4000, ]
#pch <- pch[1:4000, ]
#yeo <- yeo[1:4000, ]
#csm <- csm[1:4000, ]
setwd("C:/Users/USER/Desktop/Weapons/Project/석혜정_교수님/논문제출/fove_gaze_data/fove_gaze_data")
idx = c(1:31, 33:54)
test <- list()
for(i in idx) {
print(i)
test_dump <- read.csv(paste0("test", i, ".csv"), header = T, stringsAsFactors = F)
test[[i]] <- test_dump
}
test[[32]]
#설문지 읽어오기
Before <- read.csv("C:/Users/USER/Desktop/Weapons/Project/석혜정_교수님/논문제출/before.csv", header=FALSE)
After <- read.csv("C:/Users/USER/Desktop/Weapons/Project/석혜정_교수님/논문제출/after.csv", header=FALSE)
Before[33:54, ] <- Before[32:53, ]
Before[32, ] <- NA
After[33:54, ] <- After[32:53, ]
After[32, ] <- NA
#유형별 문제 문항 수7,5,4,3
#해당열 12~30
####################남/여 구분##########################
male_idx=c()
fem_idx=c()
Before[32,]
for(i in c(1:54)){
if(!is.na(Before[i,2])){
if(Before[i, 2]=='남'){
male_idx=c(male_idx,i)
}
else if(Before[i,2]=='여'){
fem_idx=c(fem_idx,i)
}
}
else
print("null check")
print(i)
}
man_test = test[male_idx]
wom_test = test[fem_idx]
Before[33,]
min_nrow = 10000
#for man
for(i in 1:length(male_idx)) {
print(i)
if(min_nrow > nrow(man_test[[i]])) {
min_nrow <- nrow(man_test[[i]])
}
print(i)
}
for(i in c(1:length(male_idx))) {
man_test[[i]] <- man_test[[i]][1:min_nrow, ]
}
for(i in c(1:length(male_idx))) {
man_test[[i]]$current_ray_data_ld.x = man_test[[i]]$current_ray_data_ld.x %>% as.numeric()
}
right_x_all_df <- NULL
right_y_all_df <- NULL
right_z_all_df <- NULL
left_x_all_df <- NULL
left_y_all_df <- NULL
left_z_all_df <- NULL
object_name_all_df <- NULL
for(i in c(1:length(male_idx))) {
test_df <- man_test[[i]]
right_ray_data_x <- test_df$current_ray_data_rd.x.1 + test_df$current_ray_data_rd.x
left_ray_data_x <- test_df$current_ray_data_lo.x + test_df$current_ray_data_ld.x
right_ray_data_y <- test_df$current_ray_data_rd.y.1 + test_df$current_ray_data_rd.y
left_ray_data_y <- test_df$current_ray_data_lo.y + test_df$current_ray_data_ld.y
right_ray_data_z <- test_df$current_ray_data_rd.z.1 + test_df$current_ray_data_rd.z
left_ray_data_z <- test_df$current_ray_data_lo.z + test_df$current_ray_data_ld.z
object_name <- test_df$object_name
right_x_all_df <- cbind(right_ray_data_x, right_x_all_df)
right_y_all_df <- cbind(right_ray_data_y, right_y_all_df)
right_z_all_df <- cbind(right_ray_data_z, right_z_all_df)
left_x_all_df <- cbind(left_ray_data_x, left_x_all_df)
left_y_all_df <- cbind(left_ray_data_y, left_y_all_df)
left_z_all_df <- cbind(left_ray_data_z, left_z_all_df)
object_name_all_df <- cbind(object_name, object_name_all_df)
}
r_x_sd_df <- apply(right_x_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
r_y_sd_df <- apply(right_y_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
r_z_sd_df <- apply(right_z_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
l_x_sd_df <- apply(left_x_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
l_y_sd_df <- apply(left_y_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
l_z_sd_df <- apply(left_z_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
write.csv(r_x_sd_df,"C:/Users/user/Desktop/sd",row.names=TRUE)
write.csv(r_x_sd_df,"C:/Users/user/Desktop/sd.csv",row.names=TRUE)
#object names for man in 1150~2300 Frame
man_object <-NULL
for(i in 1:length(male_idx)){
man_object <- rbind(man_object,man_test[[i]]$object_name[1150:2300])
}
sort(table(man_object),decreasing = TRUE)
#object names for man in 2300~3500 Frame
man_object <- NULL
for(i in 1:length(male_idx)){
man_object <- rbind(man_object, man_test[[i]]$object_name[2300:3500])
}
sort(table(man_object), decreasing=TRUE)
#for women
for(i in 1:length(fem_idx)) {
print(i)
if(min_nrow > nrow(wom_test[[i]])) {
min_nrow <- nrow(wom_test[[i]])
}
print(i)
}
for(i in c(1:length(fem_idx))) {
wom_test[[i]] <- wom_test[[i]][1:min_nrow, ]
}
for(i in c(1:length(fem_idx))) {
wom_test[[i]]$current_ray_data_ld.x = wom_test[[i]]$current_ray_data_ld.x %>% as.numeric()
}
for(i in c(1:length(fem_idx))) {
wom_test[[i]]$current_ray_data_ld.x = wom_test[[i]]$current_ray_data_ld.x %>% as.numeric()
}
right_x_all_df <- NULL
right_y_all_df <- NULL
right_z_all_df <- NULL
left_x_all_df <- NULL
left_y_all_df <- NULL
left_z_all_df <- NULL
object_name_all_df <- NULL
for(i in c(1:length(fem_idx))) {
test_df <- wom_test[[i]]
right_ray_data_x <- test_df$current_ray_data_rd.x.1 + test_df$current_ray_data_rd.x
left_ray_data_x <- test_df$current_ray_data_lo.x + test_df$current_ray_data_ld.x
right_ray_data_y <- test_df$current_ray_data_rd.y.1 + test_df$current_ray_data_rd.y
left_ray_data_y <- test_df$current_ray_data_lo.y + test_df$current_ray_data_ld.y
right_ray_data_z <- test_df$current_ray_data_rd.z.1 + test_df$current_ray_data_rd.z
left_ray_data_z <- test_df$current_ray_data_lo.z + test_df$current_ray_data_ld.z
object_name <- test_df$object_name
right_x_all_df <- cbind(right_ray_data_x, right_x_all_df)
right_y_all_df <- cbind(right_ray_data_y, right_y_all_df)
right_z_all_df <- cbind(right_ray_data_z, right_z_all_df)
left_x_all_df <- cbind(left_ray_data_x, left_x_all_df)
left_y_all_df <- cbind(left_ray_data_y, left_y_all_df)
left_z_all_df <- cbind(left_ray_data_z, left_z_all_df)
object_name_all_df <- cbind(object_name, object_name_all_df)
}
r_x_sd_df <- apply(right_x_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
r_y_sd_df <- apply(right_y_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
r_z_sd_df <- apply(right_z_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
l_x_sd_df <- apply(left_x_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
l_y_sd_df <- apply(left_y_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
l_z_sd_df <- apply(left_z_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
write.csv(r_x_sd_df,"C:/Users/user/Desktop/여성_표준편차.csv",row.names=TRUE)
types <- c()
types <- c(types, "type")
#Before<-Before[2:30]
#모든 실험자들에 대하여 어떤 유형에 해당하는지 점수 분석
#각각의 문제들에 대한 점수의 합을 문제의 수로 나누어 평균을 낸 후
#가장 평균이 높은 유형을 그 사람의 파악.
#유형은 types열에 저장
for (i in c((1:31),(33:length(Before$V1)))){
a =0;b=0;c=0;d=0
a = (as.numeric(Before[i,11]) + as.numeric(Before[i,12])+ as.numeric(Before[i,13])+ as.numeric(Before[i,14])+ as.numeric(Before[i,15])+ as.numeric(Before[i,16])+ as.numeric(Before[i,17]))/7
b = (as.numeric(Before[i,18]) + as.numeric(Before[i,19])+ as.numeric(Before[i,20])+ as.numeric(Before[i,21])+ as.numeric(Before[i,22]))/5
c = (as.numeric(Before[i,23]) + as.numeric(Before[i,24])+ as.numeric(Before[i,25])+ as.numeric(Before[i,26]))/4
d = (as.numeric(Before[i,27]) + as.numeric(Before[i,28])+ as.numeric(Before[i,29]))/3
large = max(a,b,c,d)
if(large == a){
types <- c(types,1)#탈감각적 몰입
}
else if (large == b){
types <- c(types,2)#개인적 미디어 동등화형
}
else if (large == c){
types <- c(types,3)#감각적 확장 가치 체험형
}
else if (large == d){
types <- c(types,4)#탈미디어 안주형
}
}
type1 <- list()
type2 <- list()
type3 <- list()
type4 <- list()
for(i in (2:length(types))){
if(i<33){
if(types[i]=="1"){
type1[length(type1)+1] = test[i-1]
}else if(types[i]=="2"){
type2[length(type2)+1] = test[i-1]
}else if(types[i]=="3"){
type3[length(type3)+1] = test[i-1]
}else if(types[i]=="4"){
type4[length(type4)+1] = test[i-1]
}
}
else
{
if(types[i]=="1"){
type1[length(type1)+1] = test[i]
}else if(types[i]=="2"){
type2[length(type2)+1] = test[i]
}else if(types[i]=="3"){
type3[length(type3)+1] = test[i]
}else if(types[i]=="4"){
type4[length(type4)+1] = test[i]
}
}
}
#for type1
min_nrow=10000
for(i in 1:length(type1)) {
print(i)
if(min_nrow > nrow(type1[[i]])) {
min_nrow <- nrow(type1[[i]])
}
print(i)
}
for(i in c(1:length(type1))) {
type1[[i]] <- type1[[i]][1:min_nrow, ]
}
for(i in c(1:length(type1))) {
type1[[i]]$current_ray_data_ld.x = type1[[i]]$current_ray_data_ld.x %>% as.numeric()
}
for(i in c(1:length(type1))) {
type1[[i]]$current_ray_data_ld.x = type1[[i]]$current_ray_data_ld.x %>% as.numeric()
}
right_x_all_df <- NULL
right_y_all_df <- NULL
right_z_all_df <- NULL
left_x_all_df <- NULL
left_y_all_df <- NULL
left_z_all_df <- NULL
object_name_all_df <- NULL
for(i in c(1:length(type1))) {
test_df <- type1[[i]]
right_ray_data_x <- test_df$current_ray_data_rd.x.1 + test_df$current_ray_data_rd.x
left_ray_data_x <- as.numeric(test_df$current_ray_data_lo.x) + as.numeric(test_df$current_ray_data_ld.x)
right_ray_data_y <- test_df$current_ray_data_rd.y.1 + test_df$current_ray_data_rd.y
left_ray_data_y <- test_df$current_ray_data_lo.y + test_df$current_ray_data_ld.y
right_ray_data_z <- test_df$current_ray_data_rd.z.1 + test_df$current_ray_data_rd.z
left_ray_data_z <- test_df$current_ray_data_lo.z + test_df$current_ray_data_ld.z
object_name <- test_df$object_name
right_x_all_df <- cbind(right_ray_data_x, right_x_all_df)
right_y_all_df <- cbind(right_ray_data_y, right_y_all_df)
right_z_all_df <- cbind(right_ray_data_z, right_z_all_df)
left_x_all_df <- cbind(left_ray_data_x, left_x_all_df)
left_y_all_df <- cbind(left_ray_data_y, left_y_all_df)
left_z_all_df <- cbind(left_ray_data_z, left_z_all_df)
object_name_all_df <- cbind(object_name, object_name_all_df)
}
r_x_sd_df <- apply(right_x_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
r_y_sd_df <- apply(right_y_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
r_z_sd_df <- apply(right_z_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
l_x_sd_df <- apply(left_x_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
l_y_sd_df <- apply(left_y_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
l_z_sd_df <- apply(left_z_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
write.csv(r_x_sd_df,"C:/Users/user/Desktop/PASE.csv",row.names=TRUE)
########################################
#for type3
min_nrow=10000
for(i in 1:length(type3)) {
print(i)
if(min_nrow > nrow(type3[[i]])) {
min_nrow <- nrow(type3[[i]])
}
print(i)
}
for(i in c(1:length(type3))) {
type3[[i]] <- type3[[i]][1:min_nrow, ]
}
for(i in c(1:length(type3))) {
type3[[i]]$current_ray_data_ld.x = type3[[i]]$current_ray_data_ld.x %>% as.numeric()
}
for(i in c(1:length(type3))) {
type3[[i]]$current_ray_data_ld.x = type3[[i]]$current_ray_data_ld.x %>% as.numeric()
}
right_x_all_df <- NULL
right_y_all_df <- NULL
right_z_all_df <- NULL
left_x_all_df <- NULL
left_y_all_df <- NULL
left_z_all_df <- NULL
object_name_all_df <- NULL
for(i in c(1:length(type3))) {
test_df <- type3[[i]]
right_ray_data_x <- test_df$current_ray_data_rd.x.1 + test_df$current_ray_data_rd.x
left_ray_data_x <- as.numeric(test_df$current_ray_data_lo.x) + as.numeric(test_df$current_ray_data_ld.x)
right_ray_data_y <- test_df$current_ray_data_rd.y.1 + test_df$current_ray_data_rd.y
left_ray_data_y <- test_df$current_ray_data_lo.y + test_df$current_ray_data_ld.y
right_ray_data_z <- test_df$current_ray_data_rd.z.1 + test_df$current_ray_data_rd.z
left_ray_data_z <- test_df$current_ray_data_lo.z + test_df$current_ray_data_ld.z
object_name <- test_df$object_name
right_x_all_df <- cbind(right_ray_data_x, right_x_all_df)
right_y_all_df <- cbind(right_ray_data_y, right_y_all_df)
right_z_all_df <- cbind(right_ray_data_z, right_z_all_df)
left_x_all_df <- cbind(left_ray_data_x, left_x_all_df)
left_y_all_df <- cbind(left_ray_data_y, left_y_all_df)
left_z_all_df <- cbind(left_ray_data_z, left_z_all_df)
object_name_all_df <- cbind(object_name, object_name_all_df)
}
r_x_sd_df <- apply(right_x_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
r_y_sd_df <- apply(right_y_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
r_z_sd_df <- apply(right_z_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
l_x_sd_df <- apply(left_x_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
l_y_sd_df <- apply(left_y_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
l_z_sd_df <- apply(left_z_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
write.csv(r_x_sd_df,"C:/Users/user/Desktop/PAEPP.csv",row.names=TRUE)
for(i in idx) {
if(min_nrow > nrow(test[[i]])) {
min_nrow <- nrow(test[[i]])
}
}
for(i in idx) {
test[[i]] <- test[[i]][1:min_nrow, ]
}
for(i in idx) {
test[[i]]$current_ray_data_ld.x = test[[i]]$current_ray_data_ld.x %>% as.numeric()
}
for(i in idx) {
test[[i]]$current_ray_data_ld.x = test[[i]]$current_ray_data_ld.x %>% as.numeric()
}
right_x_all_df <- NULL
right_y_all_df <- NULL
right_z_all_df <- NULL
left_x_all_df <- NULL
left_y_all_df <- NULL
left_z_all_df <- NULL
object_name_all_df <- NULL
for(i in idx) {
test_df <- test[[i]]
right_ray_data_x <- test_df$current_ray_data_rd.x.1 + test_df$current_ray_data_rd.x
left_ray_data_x <- test_df$current_ray_data_lo.x + test_df$current_ray_data_ld.x
right_ray_data_y <- test_df$current_ray_data_rd.y.1 + test_df$current_ray_data_rd.y
left_ray_data_y <- test_df$current_ray_data_lo.y + test_df$current_ray_data_ld.y
right_ray_data_z <- test_df$current_ray_data_rd.z.1 + test_df$current_ray_data_rd.z
left_ray_data_z <- test_df$current_ray_data_lo.z + test_df$current_ray_data_ld.z
object_name <- test_df$object_name
right_x_all_df <- cbind(right_ray_data_x, right_x_all_df)
right_y_all_df <- cbind(right_ray_data_y, right_y_all_df)
right_z_all_df <- cbind(right_ray_data_z, right_z_all_df)
left_x_all_df <- cbind(left_ray_data_x, left_x_all_df)
left_y_all_df <- cbind(left_ray_data_y, left_y_all_df)
left_z_all_df <- cbind(left_ray_data_z, left_z_all_df)
object_name_all_df <- cbind(object_name, object_name_all_df)
}
r_x_sd_df <- apply(right_x_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
r_y_sd_df <- apply(right_y_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
r_z_sd_df <- apply(right_z_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
l_x_sd_df <- apply(left_x_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
l_y_sd_df <- apply(left_y_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
l_z_sd_df <- apply(left_z_all_df, 1, sd, na.rm = TRUE) %>% as.data.frame
write.csv(r_x_sd_df,"C:/Users/user/Desktop/전체_사용자_sd.csv",row.names=TRUE)
male_idx
fem_idx
idx <- data.frame(male_idx)
idx
idx.cbind(fem_idx)
idx.cbind(data.frame(fem_idx))
cbind(idx,data.frame(fem_idx))
male_idx
fem_idx
#Before<-Before[2:30]
#모든 실험자들에 대하여 어떤 유형에 해당하는지 점수 분석
#각각의 문제들에 대한 점수의 합을 문제의 수로 나누어 평균을 낸 후
#가장 평균이 높은 유형을 그 사람의 파악.
#유형은 types열에 저장
for (i in c((1:31),(33:length(Before$V1)))){
a =0;b=0;c=0;d=0
a = (as.numeric(Before[i,11]) + as.numeric(Before[i,12])+ as.numeric(Before[i,13])+ as.numeric(Before[i,14])+ as.numeric(Before[i,15])+ as.numeric(Before[i,16])+ as.numeric(Before[i,17]))/7
b = (as.numeric(Before[i,18]) + as.numeric(Before[i,19])+ as.numeric(Before[i,20])+ as.numeric(Before[i,21])+ as.numeric(Before[i,22]))/5
c = (as.numeric(Before[i,23]) + as.numeric(Before[i,24])+ as.numeric(Before[i,25])+ as.numeric(Before[i,26]))/4
d = (as.numeric(Before[i,27]) + as.numeric(Before[i,28])+ as.numeric(Before[i,29]))/3
large = max(a,b,c,d)
if(large == a){
types <- c(types,1)#탈감각적 몰입
PASE_idx <- c(i)
}
else if (large == b){
types <- c(types,2)#개인적 미디어 동등화형
}
else if (large == c){
types <- c(types,3)#감각적 확장 가치 체험형
PAEPP_idx <- c(i)
}
else if (large == d){
types <- c(types,4)#탈미디어 안주형
}
}
PASE_idx
#Before<-Before[2:30]
#모든 실험자들에 대하여 어떤 유형에 해당하는지 점수 분석
#각각의 문제들에 대한 점수의 합을 문제의 수로 나누어 평균을 낸 후
#가장 평균이 높은 유형을 그 사람의 파악.
#유형은 types열에 저장
PASE_idx = c()
PAEPP_idx = c()
for (i in c((1:31),(33:length(Before$V1)))){
a =0;b=0;c=0;d=0
a = (as.numeric(Before[i,11]) + as.numeric(Before[i,12])+ as.numeric(Before[i,13])+ as.numeric(Before[i,14])+ as.numeric(Before[i,15])+ as.numeric(Before[i,16])+ as.numeric(Before[i,17]))/7
b = (as.numeric(Before[i,18]) + as.numeric(Before[i,19])+ as.numeric(Before[i,20])+ as.numeric(Before[i,21])+ as.numeric(Before[i,22]))/5
c = (as.numeric(Before[i,23]) + as.numeric(Before[i,24])+ as.numeric(Before[i,25])+ as.numeric(Before[i,26]))/4
d = (as.numeric(Before[i,27]) + as.numeric(Before[i,28])+ as.numeric(Before[i,29]))/3
large = max(a,b,c,d)
if(large == a){
types <- c(types,1)#탈감각적 몰입
PASE_idx <- c(PASE_idx,i)
}
else if (large == b){
types <- c(types,2)#개인적 미디어 동등화형
}
else if (large == c){
types <- c(types,3)#감각적 확장 가치 체험형
PAEPP_idx <- c(PAEPP_idx,i)
}
else if (large == d){
types <- c(types,4)#탈미디어 안주형
}
}
PASE_idx
PAEPP_idx
length(PASE_idx)
PASE_idx
PAEPP_idx
